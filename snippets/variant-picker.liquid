{%- comment -%}
  ----------------------------------------------------------------------------------------------------------------------
  VARIANT PICKER
  ----------------------------------------------------------------------------------------------------------------------

  Render the variant picker option selectors.

  ********************************************
  Supported variables
  ********************************************

  * product: the product for which to render the selector (required)
  * update_url: if set to true, the URL is updated when the variant changes (usually used for product page)
  * hide_sold_out_variants: if set to true, the sold out or unavailable variants are hidden
  * hide_size_chart: if set to true, size chart is always hidden
  * force_dropdown_as_block: if set to true, the dropdown selectors are replaced by blocks, which is useful for quick buy where dropdown are not convenient to use
  * form_id: the ID of the form that is listening
  * block: the block itself, for theme-specific options (such as selector types)
{%- endcomment -%}

{%- assign color_label_list = 'general.label.color' | t | replace: ', ', ',' | downcase | split: ',' -%}
{%- assign size_label_list = 'general.label.size' | t | replace: ', ', ',' | downcase | split: ',' -%}

{%- unless product.has_only_default_variant or hide_sold_out_variants and product.available == false -%}
  <variant-picker
    class="variant-picker variantPicker"
    handle="{{ product.handle }}"
    form="{{ form_id }}"
    {% if update_url %}
      update-url
    {% endif %}
    {% if hide_sold_out_variants %}
      hide-sold-out-variants
    {% endif %}
  >
    {%- for option in product.options_with_values -%}
      {%- assign option_downcase = option.name | downcase -%}
      {%- assign selector_type = block.settings.selector_mode -%}

      {% if color_label_list contains option_downcase %}
        {%- assign selector_type = block.settings.color_mode -%}

        {%- if selector_type == 'variant_image' -%}
          {%- comment -%}To use this mode every variant must have an attached media{%- endcomment -%}

          {%- for variant in product.variants -%}
            {%- unless variant.featured_media -%}
              {%- assign selector_type = 'color' -%}
              {%- break -%}
            {%- endunless -%}
          {%- endfor -%}
        {%- endif -%}
      {%- endif -%}

      {%- if selector_type == 'dropdown' and force_dropdown_as_block -%}
        {%- assign selector_type = 'block' -%}
      {%- endif -%}

      {% if product.url contains 'original' %}
        {%- if size_label_list contains option_downcase -%}
          <div class="product-size-recommendation">
            <div class="question prodSizeRecommendMessage">
              {%- if disable_preselected_size -%}
                {{ 'product.general.select_your_fit_html' | t }}
              {%- else -%}
                {{ 'product.general.what_is_your_fit' | t }}
              {%- endif -%}
            </div>
            <div class="size-recommendation-button-container">
              <button type="button" id="normal-foot" class="size-recommendation-button">
                <img src="{{ 'icon-normal-foot.png' | asset_url }}" alt="Normal/schmal" width="30" height="30">
                Normal/Schmal
              </button>
              <button type="button" id="wide-foot" class="size-recommendation-button">
                <img src="{{ 'icon-wide-foot.png' | asset_url }}" alt="Breiter FuÃŸ" width="30" height="30">
                Breit
              </button>
            </div>
            <div id="recommendation-message" style="display: none;">
              <div class="h-stack gap-2 align-center recommendation-message--inner">
                <div class="recommendation-message--icon">
                  {%- render 'icon' with 'checkmark-circle-solid', width: 20, height: 20 -%}
                </div>
                <div class="recommendation-message--text" id="recommendation-message-text"></div>
              </div>
            </div>
            {% render 'size-recommendation',
              selected_variant: product.selected_variant,
              disable_preselected_size: disable_preselected_size
            %}
          </div>
        {%- endif -%}
      {% endif %}

      <fieldset
        class="variant-picker__option no-js:hidden{% if size_label_list contains option_downcase %} size-picker sizePicker{% endif %}{% if color_label_list contains option_downcase %} color-picker colorPicker{% endif %}"
        data-option-name="{{ option.name }}"
      >
        <div class="variant-picker__option-info">
          <div class="h-stack gap-2">
            <legend class="text-subdued">{{ option.name }}:</legend>
            <variant-option-value
              form="{{ form_id }}"
              class="{% if size_label_list contains option_downcase %}selectedSizeValue{% endif %}"
              for="option{{ option.position }}"
            >
              {{ option.selected_value }}
            </variant-option-value>
          </div>

          {%- if hide_size_chart != true
            and block.settings.size_chart_page != blank
            and size_label_list contains option_downcase
          -%}
            {%- capture drawer_id -%}size-chart-{{ section.id }}-{{ block.id }}{%- endcapture -%}

            <button
              type="button"
              class="text-sm text-subdued"
              aria-controls="{{ drawer_id | escape }}"
              aria-expanded="false"
            >
              <span class="link">{{ 'product.general.size_chart' | t }}</span>
            </button>

            <x-drawer id="{{ drawer_id }}" class="drawer drawer--lg">
              <span class="h5" slot="header">{{ block.settings.size_chart_page.title }}</span>

              <div class="prose">
                {{- block.settings.size_chart_page.content -}}
              </div>
            </x-drawer>
          {%- endif -%}
        </div>

        {%- if selector_type == 'dropdown' -%}
          {%- capture popover_id -%}popover-variant-picker-{{ section.id }}-{{ product.id }}-{{ option.position }}{%- endcapture -%}

          <div class="relative">
            <button type="button" class="select" aria-controls="{{ popover_id }}" aria-expanded="false">
              <span id="{{ popover_id }}-selected-value">{{- option.selected_value -}}</span>
              {%- render 'icon' with 'chevron-bottom', class: 'select-chevron' -%}
            </button>

            <x-popover
              id="{{ popover_id }}"
              class="popover"
              initial-focus="[aria-selected='true']"
              close-on-listbox-select
              anchor-horizontal="start"
              anchor-vertical="end"
            >
              <p class="h5" slot="title">{{ option.name }}</p>

              <x-listbox data-option-selector class="popover-listbox" aria-owns="{{ popover_id }}-selected-value">
                <input
                  type="hidden"
                  name="option{{ option.position }}"
                  form="{{ form_id }}"
                  value="{{ option.selected_value | escape }}"
                >

                {%- for value in option.values -%}
                  <button
                    type="button"
                    class="popover-listbox__option"
                    role="option"
                    value="{{ value | escape }}"
                    {% if value == option.selected_value %}
                      aria-selected="true"
                    {% endif %}
                    data-option-value
                  >
                    {{ value }}
                  </button>
                {%- endfor -%}
              </x-listbox>
            </x-popover>
          </div>
        {%- else -%}
          <div class="variant-picker__option-values-wrap{% unless block.settings.stack_blocks %} scroll-area bleed sm:unbleed{% endunless %}">
            <div
              data-option-selector
              class="variant-picker__option-values {% if block.settings.stack_blocks %}wrap{% else %}scroll-area bleed sm:unbleed{% endif %} {% if selector_type == 'color' and settings.color_swatch_style == 'rectangle' %}variant-picker__option-values--color gap-4{% else %}gap-2{% endif %}"
            >
              {%- assign name = 'option' | append: option.position -%}

              {%- for value in option.values -%}
                {%- capture selected_state -%}
                  {%- unless disable_preselect and product.selected_variant == nil -%}
                    {%- unless disable_preselected_size -%}
                      {% comment %} {% if value == option.selected_value %}checked="checked"{% endif %} {% endcomment %}
                    {%- endunless -%}
                  {%- endunless -%}
                  {% if value == option.selected_value %}checked="checked"{% endif %}
                {%- endcapture -%}

                {%- assign selected = false -%}

                {%- if value == option.selected_value -%}
                  {%- assign selected = true -%}
                {%- endif -%}

                {%- case selector_type -%}
                  {%- when 'variant' -%}
                    {%- assign variant_for_value = product.variants | where: name, value | first -%}
                    {%- render 'swatch' with 'media',
                      value: value,
                      media: variant_for_value.featured_media,
                      selected: selected,
                      name: name,
                      form: form_id,
                      bordered: true,
                      selected_state: selected_state
                    -%}
                  {%- when 'color' -%}
                    {%- render 'swatch' with 'color',
                      value: value,
                      selected: selected,
                      name: name,
                      form: form_id,
                      selected_state: selected_state
                    -%}
                  {%- when 'block' -%}
                    {%- render 'swatch' with 'block',
                      value: value,
                      selected: selected,
                      name: name,
                      form: form_id,
                      selected_state: selected_state
                    -%}
                  {%- when 'block_swatch' -%}
                    {%- render 'swatch' with 'block',
                      value: value,
                      selected: selected,
                      name: name,
                      form: form_id,
                      show_color: true,
                      selected_state: selected_state
                    -%}
                {%- endcase -%}
              {%- endfor -%}
            </div>
          </div>
        {%- endif -%}
      </fieldset>
      {% if forloop.index == 1 %}
        {% render 'size-advisor', class: 'through-variantPicker', productName: product.handle, block: block %}
      {% endif %}
    {%- endfor -%}

    <noscript>
      {%- capture input_label -%}{{ 'product.general.variant' | t }}{%- endcapture -%}
      {%- capture select_options -%}
        {%- for variant in product.variants -%}
          <option {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
        {%- endfor -%}
      {%- endcapture -%}

      {%- render 'select', label: input_label, form: form_id, name: 'id', options: select_options -%}
    </noscript>
  </variant-picker>
{%- else -%}
  <noscript>
    <input type="hidden" name="id" form="{{ form_id }}" value="{{ product.selected_or_first_available_variant.id }}">
  </noscript>
{%- endunless -%}
